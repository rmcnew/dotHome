# : << ENDOFCONF
# ^^ hack to run conf file as an inline script 
# Copied and adapted from:  https://github.com/alerque/que-tmux/blob/master/.tmux.conf

# Binding to reload config file
bind R source ~/.tmux.conf \; display-message "Conf reloaded . . ."

# Force UTF-8 regardless of locale
set -g default-terminal "tmux-256color"

# share environment with Yazi file manager
set -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# use zsh
#set-option -g default-shell /bin/zsh

# use fish
set-option -g default-shell /usr/bin/fish

# Use ` as command prefix
unbind C-b
set-option -g prefix `
bind ` send-prefix

# Keep all sessions
set-option -g destroy-unattached off

# Start numbering from 1 for easier key bindings
set -g base-index 1
setw -g pane-base-index 1

# Do not use extended escape sequences
set -s escape-time 0

# visual alert for activity in other panes
set -g visual-activity off 
setw -g monitor-activity on

# Use auto-scroll mode in xterms
set -g xterm-keys on
set -g history-limit 100000
#set -g mouse on

# allow naming panes by term codes
setw -g automatic-rename on
set -g set-titles on

# renumber panes on closures
set -g renumber-windows on

# let clients have different sizes
setw -g aggressive-resize on

# enable focus events
set-option -g focus-events on

# create window
#unbind c
#bind c command-prompt "new-session -A -s '%1'"
unbind ^c
bind ^c new-window

# detach 
unbind ^D
bind ^D detach

# rename window
bind A command-prompt "rename-window %1"

# window switching
bind l next-window
bind h previous-window
bind u last-window

# pane management
bind v split-window -h -c "#{pane_current_path}"
bind V split-window -v -c "#{pane_current_path}"
bind - break-pane

# pane switching
bind -r H select-pane -L
bind -r J select-pane -D
bind -r K select-pane -U
bind -r L select-pane -R

# resize panes
bind -r ^J resize-pane -D 5
bind -r ^K resize-pane -U 5
bind -r ^H resize-pane -L 5
bind -r ^L resize-pane -R 5

# list clients
unbind *
bind * list-clients

# launch Yazi file manager
bind-key y display-popup -d '#{pane_current_path}' -x R -h 95% -w 95% -E 'tmux new-session yazi \; set status off'
# launch lazygit Git helper
bind-key g popup -E -w 95% -h 95%  -d '#{pane_current_path}' lazygit
# launch helix editor with tmux output history
bind-key e display-popup -w 95% -h 90% -E "tmux capture-pane -Jp -S- | hx -"

# status bar settings
set -g status on
set -g status-interval 10
set -g status-fg colour231
set -g status-bg colour234
set -g status-left-length 20
set -g status-left '#{?client_prefix,#[fg=colour254]#[bg=colour31]#[bold],#[fg=color16]#[bg=colour254]#[bold]} #S #{?client_prefix,#[fg=colour32]#[bg=colour234]#[nobold],#[fg=colour254]#[bg=colour234]#[nobold]} '
set -g status-right '#[fg=colour252,bg=colour233,nobold,noitalics,nounderscore] #[fg=colour16,bg=colour252,bold,noitalics,nounderscore] #h '
set -g status-right-length 10
set -g window-status-format "#[fg=colour244,bg=colour234]#I #[fg=colour240] #[default]#W "
set -g window-status-current-format "#[fg=colour234,bg=colour31] #[fg=colour117,bg=colour31] #I  #[fg=colour231,bold]#W #[fg=colour31,bg=colour234,nobold] "
set -g window-status-last-style fg=colour31
set-window-option -g window-status-style fg=colour249
set-window-option -g window-status-activity-style fg=yellow
set-window-option -g window-status-activity none
set-window-option -g window-status-bell-style fg=red
set-window-option -g window-status-bell none

# ENDOFCONF
# clone () {
#   orig=${1%-*}
#   let i=$( tmux list-sessions -F '#S' | sed -nE "/^${orig}-[0-9]+$/{s/[^0-9]//g;p}" | tail -n1 )+1
#   copy="$orig-$i"
#   TMUX= tmux new-session -d -t $orig -s $copy
#   tmux switch-client -t $copy
#   tmux set -q -t $copy destroy-unattached on
# }
# $@
# # vim: ft=tmux
